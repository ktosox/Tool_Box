[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[ext_resource path="res://Shader_Examples/seamless_texture5.png" type="Texture" id=1]
[ext_resource path="res://Shader_Examples/seamless_texture2.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D texture1;
uniform sampler2D texture2;

uniform vec2 scorll1 = vec2(0.25,-0.3);
uniform vec2 scorll2 = vec2(0.2,-0.4);

uniform sampler2D lifetimeGradient;
uniform sampler2D overlapGradient;

uniform float sharpnes = 5.0;

void fragment(){
	
	float particleSeed = COLOR.r / (COLOR.r + COLOR.b + COLOR.g);
	
	float adjustedTime = TIME + particleSeed * 154.685;
	
	float intesity = texture(texture1, UV + scorll1 * adjustedTime).r * texture(texture2, UV + scorll2 * adjustedTime).r;
	
	vec4 overlapColor = texture(overlapGradient, vec2(intesity * 2.8));
	
	vec4 lifetimeColor = texture(lifetimeGradient, vec2(COLOR.a));
	COLOR = lifetimeColor * overlapColor;
	COLOR.a *= min(1.0, intesity * sharpnes) * texture(TEXTURE,UV).a;
}"

[sub_resource type="Gradient" id=21]
offsets = PoolRealArray( 0, 0.324759, 0.543408 )
colors = PoolColorArray( 0, 1, 0.748047, 1, 0, 0.461203, 0.588867, 1, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=22]
gradient = SubResource( 21 )

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0.141479, 0.369775, 0.546624 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )
width = 100

[resource]
shader = SubResource( 1 )
shader_param/scorll1 = Vector2( 0, 0.01 )
shader_param/scorll2 = Vector2( 0, 0.203 )
shader_param/sharpnes = 2.881
shader_param/texture1 = ExtResource( 1 )
shader_param/texture2 = ExtResource( 2 )
shader_param/lifetimeGradient = SubResource( 22 )
shader_param/overlapGradient = SubResource( 24 )
